CRUD:
  -> Create;
  -> Read;
  -> Update;
  -> Delete.

PVZ, Prekiu krepselis. 


Bootstrap library:
nenaudojama praktikoje, dazinau mokylineje aplinkoje.

https://getbootstrap.com/docs/5.0/components/card/

Dabar more in trend: 

https://tailwindcss.com/


Bootstrap terminal commands:
    - npm i Bootstrap
    

In App.jsx: 

    - import '.bootstrap/dist/css/bootstrap.min.css';
    - paste collumn code from Bootstrap;
    - chahnge class to className.
    - remove:   <div className="App"> 
                <header className="App-header">
                </header>
    - format doc.

    - change className='col -> to 'col-4'  & 'col-8';
    - add collumn card 'Special title treatment' from Bootstrap: Components/card 
        -> to <className='card'>;
    - change: Featured to New Person;
    - remove: 
                  <p className="card-text">
                With supporting text below as a natural lead-in to additional
                content.
              </p>
              <a href="#" className="btn btn-primary">
                Go somewhere
              </a>
    - change: Special title treatment to Add new social network;
    - to  <div className="card (add->) mt-4">;
    - change: <div className="card-header">New Person</div>: <div> </div> to -> <h1> </h1>;

    - copy paste: from 006/Input.jsx under (<h5 className="card-title">Add New Social Network</h5>):
        <fieldset>
            <legend>One input text</legend>
                <div>Input: {text}</div>
            <div>Left: {10 - text.length}</div>
            <div>
            <input type="text" value={text} onChange={handleChange} />
            </div>
            <button className='red small' onClick={_ => setText('Hello!')}>Labas!</button>
            <button className='red small' onClick={_ => setText('Bye!')}>Viso!</button>
        </fieldset>
    - remove: 
            <button className="red small" onClick={(_) => setText("Bye!")}>Viso!</button>
            <div>Input: {text}</div>
            <div>Left: {10 - text.length}</div>
            'small' from  <button className="red small"

    - change btn from >Labas!< to >Add<
    
    - copy paste from 006/Input.jsx to App.jsx under (function App() ) :
            const [text, setText] = useState('');
            const handleChange = e => {
            if (e.target.value.length > 10) {
            return;
            }
            setText(e.target.value);
            }
    - remove: 
          if (e.target.value.length > 10) {
          return;
      }
    - add at the top of App.jsx: import {useState} from 'react';
    - change <legend>One input text</legend> to <legend>Person Name</legend>;

FROM FANCY.jsx:
    - copy paste under (<div><input type="text" value={text} onChange={handleChange} /></div):
    - copy paste: const [range, setRange] = useState('0') under the other useState;
    - copy paste: 
                const handleChangeRange = e => {
                setRange(e.target.value);
                }
    - change 0 -> 14;
    - remove: <h5 className="card-title"></h5>
    - correction: Person Name replace with: Add New Social Network



On Bootstrap web:
    - layout;
    - grid;
    - (copy first collumn code).



    ....

    Js local storage: 
    https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage

Narsykles dalykas, JavaScript gali prie local storage prieiti per:

Application / local storage ...


Jsn -> Js objekto stingine moduliacija, labiausiai paplites (formatas)
    -> t.y. taisykliu rinkinys, kaip paversti bet koki objekta/masyva i stringa
    -> pavertus i stringa, mes paskiau galime pasiversti atgal i objekta 
     (tada naudojam parse metoda)

HTTP -> hypertext transferr protocol
Narsykle viskas siunciama stringu/textu

Naudojam metoda:  JSON.stringify();
   PVZ., localStorage.setItem("persons", JSON.stringify([person])):

  const handleCreate = _ => {
    console.log('Create');
    const person = {
      name,
      age: parseInt(age), 
      sn
    }
    localStorage.setItem("persons", JSON.stringify(person));
    console.log(person);
  }

Create localStorage.js faila funkcijose.


`
Visruje irasome: 
    - import { v4 as uuidv4 } from 'uuid';
    - kuri randame: web: npmjs.com/package/uuid
    
TERMINAL: 
    - npm install uuid


To Note: Buttons.css updated: added min-width: 80px & margin: 0;

    &.small {
        padding: .5rem 1rem;
        font-size: .8rem;
        min-width: 80px;
        .no {
            margin: 0px;
        }

    }

In Delete.jsx 
    -> ln14 added: modal show. 
    -> ln14 added: modal-dialog-centered


Also, in App.scss: added:

.modal.show {
  display: block;
  background-color: #17010845;
}

Nes (Delete) Modale yra uzdetas nustatymuose display: none!

Remove: 
  fieldset {
    // border: 2px dashed skyblue;
    // margin-top: 30px;
  ...}


Here:     age: +age, -> paverstas i skaiciu!

55min video: pavyzdis is serverio ....






